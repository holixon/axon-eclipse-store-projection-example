### Create course for the whole season
// @no-log
POST http://localhost:8091/course-admin/season

> {%
  client.test("Request executed successfully", function () {
    client.assert(response.status === 204, `Response status is not 204, but ${response.status}`);
  });

%}

### Get all courses
< {%
  import {wait} from "wait";
  console.log("waiting 5 secs");
  wait(5);
%}
GET http://localhost:8091/courses

> {%
  client.test("Request executed successfully", function () {
    client.assert(response.status === 200, `Response status is not 200, but ${response.status}`);
  });
  client.test("Content-Type is application/json", () => {
    const contentType = response.headers.valueOf("content-type");
    client.assert(contentType == "application/json",
      `Expected Content-Type is application/json, but actual is ${contentType}`)
  });

  const courses = response.body;
  const courseCount = jsonPath(courses, "$.length()");
  client.test("Should have courses", () => {
    client.assert(courseCount != 0, "Expected to have some courses available.")
  });
%}


### Register kermit
// @no-log
POST http://localhost:8091/students
Content-Type: application/json

{
  "person": {
    "firstName": "Kermit",
    "lastName": "The Frog",
    "birthday": "1980-01-01",
    "birthPlace": "Los Alamos"
  },
  "start": "2024-02-01",
  "end": "2024-07-15"
}
> {%
  client.test("Request executed successfully", function () {
    client.assert(response.status === 201, `Response status is not 201, but ${response.status}`);
  });

%}


### Register piggy
// @no-log
POST http://localhost:8091/students
Content-Type: application/json

{
  "person": {
    "firstName": "Piggy",
    "lastName": "Miss",
    "birthday": "1985-06-01",
    "birthPlace": "Los Angeles"
  },
  "start": "2028-09-01",
  "end": "2029-01-31"
}

> {%
  client.test("Request executed successfully", function () {
    client.assert(response.status === 201, `Response status is not 201, but ${response.status}`);
  });

%}


### Retrieve students
< {%
  import {wait} from "wait";
  console.log("waiting 5 secs");
  wait(5);
%}
// @no-log
GET http://localhost:8091/students

> {%
  client.test("Request executed successfully", function () {
    client.assert(response.status === 200, `Response status is not 200, but ${response.status}`);
  });
  client.test("Content-Type is application/json", () => {
    const contentType = response.headers.valueOf("content-type");
    client.assert(contentType == "application/json",
      `Expected Content-Type is application/json, but actual is ${contentType}`)
  });

  const students = response.body;
  const studentCount = jsonPath(students, "$.length()");
  client.test("Should have students", () => {
    client.assert(studentCount != 0, "Expected to have some students available.")
  });

%}
